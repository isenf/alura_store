# -*- coding: utf-8 -*-
"""challenge_alura_store.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HU57h6hx28NUjzUZRbr-0NI8aJ9Mn6Pe
"""

import pandas as pd

url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

def fat_total(loja):
  faturamento = 0

  for i in loja['Preço']:
    faturamento += i
  return faturamento

fat_total(loja1)
loja1.head()

def qtd_categoria(loja):
  categorias_unicas = list(set(loja['Categoria do Produto']))
  agrup_cat = []

  for cat in categorias_unicas:
    categoria = [c for c in loja['Categoria do Produto'] if c == cat]
    agrup_cat.append(categoria)

  dict_cat = {categorias_unicas[i]: len(agrup_cat[i]) for i in range(len(categorias_unicas))}

  return dict_cat

def mais_popular(loja):
  categorias = qtd_categoria(loja)

  for cat in categorias:
    if categorias[cat] == max(categorias.values()):
      return cat

print(qtd_categoria(loja1))
mais_popular(loja1)

def media_avaliacao(loja):
  soma = 0
  soma += sum([loja['Avaliação da compra'][i] for i in range(len(loja['Avaliação da compra']))])
  return round(soma / len(loja['Avaliação da compra']), 2)

print(media_avaliacao(loja1))

def prod_num_vendas(loja):
  produtos_unicos = list(set(loja['Produto']))
  qtd_vendida = []

  for prod in produtos_unicos:
    produto = [p for p in loja['Produto'] if p == prod]
    qtd_vendida.append(len(produto))

  dict_prod = {produtos_unicos[i]: qtd_vendida[i] for i in range(len(produtos_unicos))}
  return dict_prod

def mais_vendido(loja):
  num_vendas = prod_num_vendas(loja)
  mais_vendido = max(num_vendas, key=num_vendas.get)

  return mais_vendido, num_vendas[mais_vendido]

def menos_vendido(loja):
  num_vendas = prod_num_vendas(loja)
  menos_vendido = min(num_vendas, key=num_vendas.get)

  return menos_vendido, num_vendas[menos_vendido]

print(menos_vendido(loja1))